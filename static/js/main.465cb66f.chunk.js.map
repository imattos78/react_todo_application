{"version":3,"sources":["components/header/Header.js","components/title/Title.js","components/input/Input.js","components/itemCount/ItemCount.js","components/item/Item.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Component","Title","Input","state","newItemText","date","Date","qty","updateNewItemText","event","setState","target","value","handleDateChange","console","log","handleQuantity","handleKeyPress","key","length","alert","props","addNewProductFunc","handleClick","preventDefault","type","placeholder","this","onChange","onKeyPress","inputMode","mobile","format","onClick","disabled","ItemCount","count","Item","handleDelete","e","deleteProductFunc","id","handleBought","boughtProductFunc","bought","text","quantity","dueBy","App","products","uuid","addNewProduct","prodText","dueByDate","productCopy","slice","newProduct","moment","push","deleteProduct","filteredProduct","filter","product","boughtProduct","updatedProduct","map","prod","pendingBuy","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.465cb66f.chunk.js","sourcesContent":["import React, {Component} from \"react\"\nimport \"./Header.css\"\n\n\nclass Header extends Component{\n    render() {\n        \n        return (\n            <div className=\"col- top-image\">\n            <div className=\"logo image\"></div>\n            </div> \n\n\n        )\n    }\n}\n\nexport default Header;","import React, {Component} from \"react\";\nimport \"./Title.css\"\n\nclass Title extends Component {\n    render() {\n        return(\n            <div className=\"col-12 title input-group mb-3 col- col-sm-\">\n            <h5>Make your Shopping List</h5>\n            </div>\n        );\n    }\n}\nexport default Title;","import React, { Component } from \"react\";\n//import moment from \"moment\";\nimport DatePicker from 'react-date-picker';\nimport NumericInput from 'react-numeric-input';\n\n\nimport \"./Input.css\"\n\n//controlled Component\n\nclass Input extends Component {\n\n  state = {\n\n    newItemText: \"\",\n    date: new Date(),\n    qty: 0\n   \n  }\n  //Functions that update states must always live where the state lives\n  updateNewItemText = event => {\n    // console.log(event.target.value);\n    //This funciton should update the state when someone types something\n    this.setState({\n      newItemText: event.target.value\n    });\n  }\n  handleDateChange = date => {\n    console.log(date)\n    this.setState({date});\n  }\n\n  \n  handleQuantity = qty => {\n    console.log(qty) \n    this.setState({qty});\n    \n   \n  } \n  handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      if (this.state.qty <= 0 || this.state.newItemText.length <= 0 ){\n        alert(\"Add at least one product\")\n      }else{\n        this.props.addNewProductFunc(this.state.newItemText, this.state.date, this.state.qty);  \n      this.setState({\n        newItemText: \"\"\n        \n      });  \n    } \n  }\n   \n  }\n  \n  handleClick = event => {\n    event.preventDefault();\n    if (this.state.qty <= 0){\n      alert(\"Add at least one product\")\n    }else{\n      this.props.addNewProductFunc(this.state.newItemText, this.state.date, this.state.qty);\n      this.setState({\n        newItemText: \"\"\n        \n      });\n\n    }\n    \n  }\n\n  render() {\n    return (\n      <div className=\"input-group input\">\n        <div className=\"form-group mx-sm-3 mb-2 d-flex justify-content-center flex-wrap\">\n\n          <input\n\n            className=\"form-control input-bar\"\n            type=\"text\"\n            placeholder=\"Product name\"\n            value={this.state.newItemText}\n            onChange={this.updateNewItemText}\n            onKeyPress={this.handleKeyPress}\n\n          ></input>\n\n         \n           <NumericInput \n          className=\"form-control\" \n          onChange={this.handleQuantity}\n          onKeyPress={this.handleKeyPress}\n          value={this.state.qty}\n         \n          inputMode=\"numeric\"\n          mobile=\"auto\"\n          \n          />\n          \n          \n\n          \n          <div className=\"calendar\">\n            <DatePicker\n              onChange={this.handleDateChange}\n              onKeyPress={this.handleKeyPress}\n              value={this.state.date} \n              format=\"dd-MM-y\"\n              />\n          </div>\n          </div>\n\n\n\n          <div className=\"button d-flex justify-content-center\">\n            <button type=\"button\" className=\"buttons show\" onClick={this.handleClick} disabled={this.state.newItemText.length === 0}><i className=\"fas fa-cart-plus add-icon\"></i></button>\n          </div>\n          <div className=\"button d-none d-md-block\">\n            <button type=\"button\" className=\"add-button\" onClick={this.handleClick} disabled={this.state.newItemText.length === 0}>Add</button>\n          </div>\n        \n      </div>\n\n\n    );\n\n  }\n}\n\n\n\nexport default Input","import React, {Component} from \"react\"\nimport \"./ItemCount.css\"\n\nclass ItemCount extends Component{\n    render(){\n        return (\n            <div className=\"row d-none d-md-block\">\n            <div className=\"col intro-component\">\n                <h5>You have {this.props.count} products to buy in the list:</h5>\n               \n            </div>\n        </div>\n       \n\n        );\n    }\n}\n\nexport default ItemCount;","import React, { Component } from \"react\";\nimport \"./style.css\"\n\n\nclass Item extends Component {\n\n    handleDelete = e =>{\n        console.log(\"button was clicked\", e);\n        this.props.deleteProductFunc(this.props.id)\n      }\n    handleBought = e =>{\n        this.props.boughtProductFunc(this.props.id)\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-12 col-md-6\">\n                    <table className=\"table table-sm table-borderless\">\n                        <tbody className=\"text\">\n                            <tr className=\"text-align\">\n                                <td><i className=\"fas fa-angle-right arrow\">\n                                </i></td>\n                                <td> {!this.props.bought && this.props.text}</td>\n                                <td>{this.props.bought ? this.props.text : `Qty: ${this.props.quantity}`}</td>\n                                <td>{this.props.date}</td>\n                                <td>{!this.props.bought && `Buy: ${this.props.dueBy}`}</td>\n                               \n\n                            </tr>\n                        </tbody>\n                        {/* <p id=\"prod-to-buy\" className={this.props.bought ? \"bought\" : ''}>\n                            <i className=\"fas fa-angle-right arrow\">\n                            </i> {this.props.text}</p> */}\n                    </table>\n                </div>\n\n                {/* Small buttons */}\n                <div className=\"col-6 show left\">{!this.props.bought && (\n                    <button type=\"button\" className=\"buttons\" onClick={this.handleBought}><i className=\"fas fa-check-circle check-icon\"></i></button>)}\n                </div>\n                <div className={this.props.bought ? \"col-1 show right\" : \"col-1 show\"}>\n                    <button type=\"button\" className=\"buttons\" onClick={this.handleDelete}><i className=\"fas fa-times-circle cruz-icon\"></i></button>\n                </div>\n                {/* Big buttons */}\n                <div className=\"col-3 b-left d-none d-md-block\">{!this.props.bought && (\n\n                    <button type=\"button\" className=\"add-button\" onClick={this.handleBought}>Done </button>)}\n                </div>\n                <div className=\" col-3 b-rigth d-none d-md-block\">\n                    <button type=\"button\" className=\"del-button\" onClick={this.handleDelete}>Delete</button>\n                </div>\n                \n            </div >\n\n\n\n\n        );\n    }\n}\n\nexport default Item\n\n","import React, { Component } from 'react';\nimport uuid from \"uuid/v4\";\nimport moment from \"moment\";\nimport Header from \"./components/header/Header\";\nimport Title from \"./components/title/Title\";\nimport Input from \"./components/input/Input\";\nimport ItemCount from \"./components/itemCount/ItemCount\";\nimport Item from \"./components/item/Item\";\n\n\nimport './App.css';\n\n\nclass App extends Component {\n  state = {\n    products: [\n      { text: \"Tomato\", quantity: 2, bought: true, date: \"2019-10-27\", id: uuid(), dueBy: \"2019-11-30\" },\n      { text: \"Avocado\", quantity: 3, bought: true, date: \"2019-10-28\", id: uuid(), dueBy: \"28-12-2019\" },\n      { text: \"Bread\", quantity: 1, bought: false, date: \"2019-11-03\", id: uuid(), dueBy: \"01-12-2019\" },\n      { text: \"Water\", quantity: 3, bought: false, date: \"2019-10-29\", id: uuid(), dueBy: \"08-12-2019\" },\n      { text: \"Beer\", quantity: 6, bought: true, date: \"2019-10-21\", id: uuid(), dueBy: \"20-12-2019\" },\n      { text: \"Pizza\", quantity: 1, bought: false, date: \"2019-10-22\", id: uuid(), dueBy: \"21-12-2019\" }\n\n    ]\n  }\n  //This func should update the state with a new task\n  addNewProduct = (prodText, dueByDate, qty) => {\n    const productCopy = this.state.products.slice();\n    const newProduct = {\n      text: prodText,\n      bought: false,\n      date: moment().format(\"YYYY-MM-DD\"),\n      id: uuid(),\n      dueBy: moment(dueByDate).format(\"DD-MM-YYYY\"),\n      quantity: qty\n    }\n\n    productCopy.push(newProduct)\n    this.setState({\n      products: productCopy\n    });\n  };\n\n  //Remove the product with th ID in question from this.state.products   \n  deleteProduct = id => {\n    console.log(id)\n\n    //filter to remove the product that we want to delete\n    const filteredProduct = this.state.products.filter((product) => product.id !== id)\n    console.log(filteredProduct)\n\n    //setState\n    this.setState({\n      products: filteredProduct\n    });\n  };\n\n  boughtProduct = id => {\n    console.log(\"This id is \" + id);\n    const updatedProduct = this.state.products.map(product => {\n      if (product.id === id) {\n        product.bought = true;\n      }\n      return product;\n    });\n    this.setState({\n      products: updatedProduct\n    })\n  }\n\n  render() {\n\n    const boughtProduct = this.state.products.filter(prod => { return prod.bought })\n    const pendingBuy = this.state.products.filter(prod => !prod.bought);\n    console.log(boughtProduct);\n    console.log(pendingBuy);\n\n    return (\n      <div className=\"container\">\n        <Header />\n        <Title />\n        <Input addNewProductFunc={this.addNewProduct} />\n\n        <ItemCount count={pendingBuy.length} />\n        {pendingBuy.map(prod => <Item text={prod.text} bought={prod.bought} quantity={prod.quantity} key={prod.id} id={prod.id} deleteProductFunc={this.deleteProduct} boughtProductFunc={this.boughtProduct} dueBy={prod.dueBy} />\n        )}\n\n        <h5 className=\"title\">You recently bought: </h5>\n\n        {boughtProduct.map(prod => <Item text={prod.text} bought={prod.bought} key={prod.id} id={prod.id} deleteProductFunc={this.deleteProduct} dueBy={prod.dueBy} />\n        )}\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}